@model CRUD_Operation.Models.Department
@{
    ViewData["Title"] = "Delete Department";
}

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title text-danger">
                <i class="bi bi-building-x me-3"></i>
                Delete Department
            </h1>
            <p class="text-muted mb-0">Confirm deletion of department record - This action cannot be undone</p>
        </div>
        <div class="page-actions">
            <a asp-action="Details" asp-route-id="@Model.ID" class="btn btn-info btn-lg">
                <i class="bi bi-eye me-2"></i>View Details
            </a>
            <a asp-action="ListAll" class="btn btn-outline-secondary btn-lg">
                <i class="bi bi-arrow-left me-2"></i>Back to List
            </a>
        </div>
    </div>
</div>

<!-- Warning Alert -->
<div class="alert alert-danger alert-dismissible fade show" role="alert">
    <i class="bi bi-exclamation-triangle-fill me-2"></i>
    <strong>Warning!</strong> You are about to delete this department record. This action will mark the department as deleted and cannot be undone.
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
</div>

<!-- Employee Warning (if department has employees) -->
@if (Model.CountEmployees > 0)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <i class="bi bi-people-fill me-2"></i>
        <strong>Important!</strong> This department currently has <strong>@Model.CountEmployees employee(s)</strong>. 
        Please reassign employees before deletion or they will become unassigned.
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Department Information Display -->
<div class="delete-container">
    <!-- Department Profile Summary -->
    <div class="card border-danger shadow-sm mb-4">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0">
                <i class="bi bi-building-x me-2"></i>Department to be Deleted
            </h5>
        </div>
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-3 text-center">
                    <div class="profile-image-container">
                        <div class="profile-placeholder-delete">
                            @Model.Name.First()
                        </div>
                    </div>
                    <div class="mt-3">
                        <span class="badge bg-danger department-code-delete">@Model.Code</span>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="department-summary">
                        <h2 class="department-name-delete">@Model.Name</h2>
                        <p class="department-description-delete">
                            <i class="bi bi-journal-text me-2"></i>@(Model.Description ?? "No description available")
                        </p>
                        <div class="department-info-grid">
                            <div class="info-item">
                                <strong>Code:</strong> @Model.Code
                            </div>
                            <div class="info-item">
                                <strong>Budget:</strong> $@Model.Budget.ToString("N0")
                            </div>
                            <div class="info-item">
                                <strong>Employees:</strong> @Model.CountEmployees
                            </div>
                            <div class="info-item">
                                <strong>Created:</strong> @Model.CreatedOn.ToString("MMM dd, yyyy")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Detailed Information -->
    <div class="row">
        <!-- Basic Details -->
        <div class="col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-light">
                    <h6 class="mb-0 text-muted">
                        <i class="bi bi-building me-2"></i>Basic Information
                    </h6>
                </div>
                <div class="card-body">
                    <div class="info-list">
                        <div class="info-row">
                            <span class="info-label">Department Name:</span>
                            <span class="info-value">@Model.Name</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Department Code:</span>
                            <span class="info-value">@Model.Code</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Established:</span>
                            <span class="info-value">@Model.CreatedOn.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Years Active:</span>
                            <span class="info-value">@Math.Round((DateTime.Now - Model.CreatedOn).TotalDays / 365.25, 1) years</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Type:</span>
                            <span class="info-value">
                                @if (Model.Name.ToLower().Contains("it") || Model.Name.ToLower().Contains("technology"))
                                {
                                    <span class="badge bg-primary">Technology</span>
                                }
                                else if (Model.Name.ToLower().Contains("hr") || Model.Name.ToLower().Contains("human"))
                                {
                                    <span class="badge bg-success">Human Resources</span>
                                }
                                else if (Model.Name.ToLower().Contains("finance") || Model.Name.ToLower().Contains("accounting"))
                                {
                                    <span class="badge bg-warning">Finance</span>
                                }
                                else if (Model.Name.ToLower().Contains("marketing") || Model.Name.ToLower().Contains("sales"))
                                {
                                    <span class="badge bg-info">Marketing & Sales</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">General</span>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Financial Details -->
        <div class="col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-light">
                    <h6 class="mb-0 text-muted">
                        <i class="bi bi-currency-dollar me-2"></i>Financial Information
                    </h6>
                </div>
                <div class="card-body">
                    <div class="info-list">
                        <div class="info-row">
                            <span class="info-label">Total Budget:</span>
                            <span class="info-value text-success">$@Model.Budget.ToString("N2")</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Budget per Employee:</span>
                            <span class="info-value">
                                @if (Model.CountEmployees > 0)
                                {
                                    <span class="text-info">$@((Model.Budget / Model.CountEmployees).ToString("N0"))</span>
                                }
                                else
                                {
                                    <span class="text-muted">No employees</span>
                                }
                            </span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Budget Status:</span>
                            <span class="info-value">
                                @if (Model.Budget > 0)
                                {
                                    <span class="badge bg-success">Active Budget</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">No Budget</span>
                                }
                            </span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Budget Category:</span>
                            <span class="info-value">
                                @if (Model.Budget >= 1000000)
                                {
                                    <span class="badge bg-danger">Enterprise ($1M+)</span>
                                }
                                else if (Model.Budget >= 500000)
                                {
                                    <span class="badge bg-warning">Large ($500K+)</span>
                                }
                                else if (Model.Budget >= 100000)
                                {
                                    <span class="badge bg-info">Medium ($100K+)</span>
                                }
                                else
                                {
                                    
                                        <span class="badge bg-secondary">Small (&lt;$100K)</span>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Staff & Operations -->
        <div class="col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-light">
                    <h6 class="mb-0 text-muted">
                        <i class="bi bi-people me-2"></i>Staff & Operations
                    </h6>
                </div>
                <div class="card-body">
                    <div class="info-list">
                        <div class="info-row">
                            <span class="info-label">Employee Count:</span>
                            <span class="info-value">
                                @if (Model.CountEmployees > 0)
                                {
                                    <span class="badge bg-success">@Model.CountEmployees employees</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">No employees</span>
                                }
                            </span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Department Status:</span>
                            <span class="info-value">
                                @if (Model.CountEmployees > 0)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">Inactive</span>
                                }
                            </span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Capacity:</span>
                            <span class="info-value">
                                @{
                                    var utilizationPercentage = Math.Min((Model.CountEmployees / 50.0) * 100, 100);
                                }
                                @if (Model.CountEmployees > 0)
                                {
                                    <div class="progress" style="width: 100px; height: 20px;">
                                        <div class="progress-bar bg-info" role="progressbar" style="width: @(utilizationPercentage)%">
                                            @Model.CountEmployees
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span class="text-muted">Empty</span>
                                }
                            </span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Department Head:</span>
                            <span class="info-value">
                                @if (Model.EmployeesList != null && Model.EmployeesList.Any(e => e.Position.Contains("Manager") || e.Position.Contains("Head") || e.Position.Contains("Director")))
                                {
                                    var head = Model.EmployeesList.FirstOrDefault(e => e.Position.Contains("Manager") || e.Position.Contains("Head") || e.Position.Contains("Director"));
                                    <span class="badge bg-info">@head.FirstName @head.LastName</span>
                                }
                                else
                                {
                                    <span class="text-muted">No head assigned</span>
                                }
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- System Information -->
        <div class="col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-light">
                    <h6 class="mb-0 text-muted">
                        <i class="bi bi-info-circle me-2"></i>System Information
                    </h6>
                </div>
                <div class="card-body">
                    <div class="info-list">
                        <div class="info-row">
                            <span class="info-label">Created On:</span>
                            <span class="info-value">@Model.CreatedOn.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Created By:</span>
                            <span class="info-value">@Model.CreatedBy</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Last Modified:</span>
                            <span class="info-value">@(Model.ModifiedOn?.ToString("MMM dd, yyyy HH:mm") ?? "Never")</span>
                        </div>
                        <div class="info-row">
                            <span class="info-label">Modified By:</span>
                            <span class="info-value">@(Model.ModifiedBy ?? "N/A")</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Description Section (if exists) -->
    @if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-light">
                        <h6 class="mb-0 text-muted">
                            <i class="bi bi-journal-text me-2"></i>Department Description
                        </h6>
                    </div>
                    <div class="card-body">
                        <p class="mb-0">@Model.Description</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Current Employees (if any) -->
    @if (Model.EmployeesList != null && Model.EmployeesList.Any())
    {
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card border-warning shadow-sm">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="mb-0">
                            <i class="bi bi-people-fill me-2"></i>Current Employees (@Model.EmployeesList.Count) - Will be Unassigned
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var employee in Model.EmployeesList.Take(6))
                            {
                                <div class="col-md-4 mb-2">
                                    <div class="employee-warning-card">
                                        <div class="d-flex align-items-center">
                                            <div class="employee-avatar-small me-2">
                                                @if (!string.IsNullOrEmpty(employee.ImagePath))
                                                {
                                                    <img src="@employee.ImagePath" alt="@employee.FirstName @employee.LastName" />
                                                }
                                                else
                                                {
                                                    <div class="avatar-placeholder-small">
                                                        @employee.FirstName.First()@employee.LastName.First()
                                                    </div>
                                                }
                                            </div>
                                            <div>
                                                <strong class="text-dark">@employee.FirstName @employee.LastName</strong>
                                                <small class="d-block text-muted">@employee.Position</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        @if (Model.EmployeesList.Count > 6)
                        {
                            <div class="text-center mt-2">
                                <small class="text-muted">And @(Model.EmployeesList.Count - 6) more employee(s)...</small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Deletion Impact Assessment -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="card border-danger shadow-sm">
                <div class="card-header bg-danger text-white">
                    <h6 class="mb-0">
                        <i class="bi bi-exclamation-diamond me-2"></i>Deletion Impact Assessment
                    </h6>
                </div>
                <div class="card-body">
                    <div class="impact-list">
                        <div class="impact-item">
                            <i class="bi bi-check-circle text-success me-2"></i>
                            Department record will be marked as deleted (soft delete)
                        </div>
                        <div class="impact-item">
                            <i class="bi bi-exclamation-circle text-warning me-2"></i>
                            @if (Model.CountEmployees > 0)
                            {
                                <span><strong>@Model.CountEmployees employee(s)</strong> will become unassigned</span>
                            }
                            else
                            {
                                <span>No employees will be affected</span>
                            }
                        </div>
                        <div class="impact-item">
                            <i class="bi bi-currency-dollar text-info me-2"></i>
                            Budget of <strong>$@Model.Budget.ToString("N0")</strong> will be archived
                        </div>
                        <div class="impact-item">
                            <i class="bi bi-archive text-secondary me-2"></i>
                            Historical data and relationships will be preserved
                        </div>
                        <div class="impact-item">
                            <i class="bi bi-arrow-clockwise text-primary me-2"></i>
                            Department can potentially be restored by database administrator
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Section -->
    <div class="confirmation-section">
        <div class="card border-danger shadow">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirm Deletion
                </h5>
            </div>
            <div class="card-body text-center py-4">
                <div class="confirmation-text mb-4">
                    <h5 class="text-danger">Are you sure you want to delete this department?</h5>
                    <p class="text-muted mb-0">
                        This action will mark <strong>@Model.Name</strong> as deleted.
                        @if (Model.CountEmployees > 0)
                        {
                            <br><span class="text-warning"><strong>Warning:</strong> @Model.CountEmployees employee(s) will be unassigned.</span>
                        }
                    </p>
                </div>

                <!-- Deletion Form -->
                <form asp-action="Delete" method="post" class="delete-form" onsubmit="return confirmDeletion()">
                    <input type="hidden" asp-for="ID" />
                    @if (Model.CountEmployees > 0)
                    {
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" name="forceDelete" id="forceDelete">
                            <label class="form-check-label text-warning" for="forceDelete">
                                <strong>Force Delete:</strong> Unassign @Model.CountEmployees employee(s) and delete department
                            </label>
                        </div>
                    }
                    <div class="btn-group-delete">
                        <button type="submit" class="btn btn-danger btn-lg me-3">
                            <i class="bi bi-trash me-2"></i>Yes, Delete Department
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.ID" class="btn btn-outline-info btn-lg me-3">
                            <i class="bi bi-eye me-2"></i>View Details Instead
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-outline-warning btn-lg me-3">
                            <i class="bi bi-pencil me-2"></i>Edit Instead
                        </a>
                        <a asp-action="ListAll" class="btn btn-secondary btn-lg">
                            <i class="bi bi-x-circle me-2"></i>Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .page-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    /* Delete Container */
    .delete-container {
        max-width: 1200px;
        margin: 0 auto;
        animation: fadeInUp 0.6s ease-out;
    }

    /* Profile Placeholder */
    .profile-placeholder-delete {
        width: 120px;
        height: 120px;
        border-radius: 15px;
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 3rem;
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.3);
        margin: 0 auto;
    }

    .department-code-delete {
        font-size: 1rem;
        padding: 0.5rem 1rem;
    }

    /* Department Summary */
    .department-name-delete {
        font-size: 2.25rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    .department-description-delete {
        font-size: 1.25rem;
        color: #718096;
        margin-bottom: 1rem;
    }

    .department-info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.75rem;
    }

    .info-item {
        font-size: 0.95rem;
    }

    .info-item strong {
        color: #4a5568;
    }

    /* Information Lists */
    .info-list {
        space-y: 0.75rem;
    }

    .info-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem 0;
        border-bottom: 1px solid #e2e8f0;
    }

    .info-row:last-child {
        border-bottom: none;
    }

    .info-label {
        font-weight: 600;
        color: #4a5568;
        font-size: 0.9rem;
    }

    .info-value {
        color: #2d3748;
        font-size: 0.95rem;
        text-align: right;
    }

    /* Employee Warning Cards */
    .employee-warning-card {
        padding: 0.75rem;
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        border-radius: 8px;
        margin-bottom: 0.5rem;
    }

    .employee-avatar-small img {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        object-fit: cover;
    }

    .avatar-placeholder-small {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.9rem;
    }

    /* Impact Assessment */
    .impact-list {
        space-y: 0.5rem;
    }

    .impact-item {
        padding: 0.5rem 0;
        font-size: 0.95rem;
        display: flex;
        align-items: center;
    }

    /* Cards */
    .card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        border-radius: 12px;
        overflow: hidden;
    }

    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15) !important;
    }

    .card-header {
        border-bottom: none;
        padding: 1rem 1.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    /* Confirmation Section */
    .confirmation-section {
        margin-top: 3rem;
    }

    .confirmation-text {
        padding: 1rem;
        background: #fff5f5;
        border-radius: 10px;
        border: 1px solid #fed7d7;
    }

    .btn-group-delete {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn {
        border-radius: 8px;
        padding: 0.75rem 2rem;
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
    }

    /* Alert Styling */
    .alert-danger, .alert-warning {
        border-radius: 12px;
        border-left: 5px solid;
    }

    .alert-danger {
        border-left-color: #dc3545;
    }

    .alert-warning {
        border-left-color: #ffc107;
    }

    /* Badge Styling */
    .badge {
        border-radius: 6px;
        font-weight: 500;
        padding: 0.5rem 0.75rem;
    }

    /* Progress Bar */
    .progress {
        border-radius: 10px;
    }

    .progress-bar {
        border-radius: 10px;
    }

    
</style>

<!-- JavaScript for Confirmation -->
<script>
    function confirmDeletion() {
        const departmentName = '@Model.Name';
        const employeeCount = @Model.CountEmployees;
        
        let confirmMessage = `Are you absolutely sure you want to delete "${departmentName}"?\n\n`;
        confirmMessage += `This action will mark the department as deleted and cannot be undone.\n\n`;
        
        if (employeeCount > 0) {
            confirmMessage += `WARNING: ${employeeCount} employee(s) will become unassigned!\n\n`;
        }
        
        confirmMessage += `Type "DELETE" to confirm:`;

        const userInput = prompt(confirmMessage);

        if (userInput === "DELETE") {
            if (employeeCount > 0) {
                return confirm(`Final confirmation: Delete "${departmentName}" and unassign ${employeeCount} employee(s)?`);
            } else {
                return confirm(`Final confirmation: Delete "${departmentName}"?`);
            }
        } else if (userInput !== null) {
            alert("Deletion cancelled. You must type 'DELETE' exactly to confirm.");
        }

        return false;
    }

    // Auto-focus on page load for accessibility
    document.addEventListener('DOMContentLoaded', function() {
        // Warn user before leaving page
        let formSubmitted = false;

        document.querySelector('.delete-form').addEventListener('submit', function() {
            formSubmitted = true;
        });

        window.addEventListener('beforeunload', function(e) {
            if (!formSubmitted) {
                e.preventDefault();
                e.returnValue = '';
            }
        });

        // Highlight employee warning if department has employees
        const employeeCount = @Model.CountEmployees;
        if (employeeCount > 0) {
            console.warn(`Department "${@Model.Name}" has ${employeeCount} employee(s) that will be unassigned upon deletion.`);
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

