@model List<CRUD_Operation.Models.Department>
@{
    ViewData["Title"] = "All Departments";
}

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">
                <i class="bi bi-building-fill me-3"></i>
                All Departments
            </h1>
            <p class="text-muted mb-0">Comprehensive list of all departments in the organization</p>
        </div>
        <div class="page-actions">
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-circle me-2"></i>Add New Department
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                <i class="bi bi-arrow-left me-2"></i>Back to Dashboard
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="stat-card">
            <div class="stat-icon bg-primary">
                <i class="bi bi-building"></i>
            </div>
            <div class="stat-info">
                <h3>@(Model?.Count ?? 0)</h3>
                <p>Total Departments</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <div class="stat-icon bg-success">
                <i class="bi bi-people"></i>
            </div>
            <div class="stat-info">
                <h3>@(Model?.Sum(d => d.CountEmployees) ?? 0)</h3>
                <p>Total Employees</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <div class="stat-icon bg-warning">
                <i class="bi bi-currency-dollar"></i>
            </div>
            <div class="stat-info">
                <h3>$@(Model?.Sum(d => d.Budget).ToString("N0") ?? "0")</h3>
                <p>Total Budget</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stat-card">
            <div class="stat-icon bg-info">
                <i class="bi bi-calculator"></i>
            </div>
            <div class="stat-info">
                <h3>$@(Model != null && Model.Any() ? Model.Average(d => d.Budget).ToString("N0") : "0")</h3>
                <p>Average Budget</p>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="table-controls mb-4">
    <div class="row">
        <div class="col-md-6">
            <div class="search-box">
                <input type="text" id="searchInput" class="form-control" placeholder="Search departments...">
                <i class="bi bi-search search-icon"></i>
            </div>
        </div>
        <div class="col-md-3">
            <select id="budgetFilter" class="form-select">
                <option value="">All Budget Ranges</option>
                <option value="0-50000">$0 - $50,000</option>
                <option value="50000-100000">$50,000 - $100,000</option>
                <option value="100000-500000">$100,000 - $500,000</option>
                <option value="500000+">$500,000+</option>
            </select>
        </div>
        <div class="col-md-3">
            <select id="employeeCountFilter" class="form-select">
                <option value="">All Employee Counts</option>
                <option value="0">No Employees</option>
                <option value="1-10">1-10 Employees</option>
                <option value="11-50">11-50 Employees</option>
                <option value="51+">51+ Employees</option>
            </select>
        </div>
    </div>
</div>

<!-- Department Table -->
<div class="table-container">
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover modern-table mb-0" id="departmentTable">
                        <thead class="table-header">
                            <tr>
                                <th scope="col">
                                    <i class="bi bi-building me-1"></i>Department
                                </th>
                                <th scope="col">
                                    <i class="bi bi-hash me-1"></i>Code
                                </th>
                                <th scope="col">
                                    <i class="bi bi-people me-1"></i>Employees
                                </th>
                                <th scope="col">
                                    <i class="bi bi-currency-dollar me-1"></i>Budget
                                </th>
                                <th scope="col">
                                    <i class="bi bi-journal-text me-1"></i>Description
                                </th>
                                <th scope="col">
                                    <i class="bi bi-calendar me-1"></i>Created
                                </th>
                                <th scope="col">
                                    <i class="bi bi-person me-1"></i>Created By
                                </th>
                                <th scope="col">
                                    <i class="bi bi-gear me-1"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var department in Model)
                            {
                                <tr>
                                    <!-- Department Info -->
                                    <td>
                                        <div class="department-info">
                                            <div class="department-icon">
                                                <div class="icon-placeholder">
                                                    @department.Name.First()
                                                </div>
                                            </div>
                                            <div class="department-details">
                                                <strong>@department.Name</strong>
                                                <small class="text-muted d-block">Est. @department.CreatedOn.Year</small>
                                            </div>
                                        </div>
                                    </td>

                                    <!-- Department Code -->
                                    <td>
                                        <span class="badge bg-primary">@department.Code</span>
                                    </td>

                                    <!-- Employee Count -->
                                    <td>
                                        <div class="employee-count-info">
                                            <span class="badge bg-success employee-count-badge">@department.CountEmployees</span>
                                            <small class="d-block text-muted mt-1">
                                                @if (department.CountEmployees > 0)
                                                {
                                                    <span>Active</span>
                                                }
                                                else
                                                {
                                                    <span>No staff</span>
                                                }
                                            </small>
                                        </div>
                                    </td>

                                    <!-- Budget -->
                                    <td>
                                        <strong class="text-success">$@department.Budget.ToString("N0")</strong>
                                        <small class="d-block text-muted">
                                            @if (department.CountEmployees > 0)
                                            {
                                                <span>$@((department.Budget / department.CountEmployees).ToString("N0")) per employee</span>
                                            }
                                            else
                                            {
                                                <span>Full budget available</span>
                                            }
                                        </small>
                                    </td>

                                    <!-- Description -->
                                    <td>
                                        @if (!string.IsNullOrWhiteSpace(department.Description))
                                        {
                                            <span class="description-text">@(department.Description.Length > 50 ? department.Description.Substring(0, 50) + "..." : department.Description)</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No description</span>
                                        }
                                    </td>

                                    <!-- Created Date -->
                                    <td>
                                        <span class="text-muted">@department.CreatedOn.ToString("MMM dd, yyyy")</span>
                                        <small class="d-block text-muted">
                                            @Math.Round((DateTime.Now - department.CreatedOn).TotalDays / 365.25, 1) years ago
                                        </small>
                                    </td>

                                    <!-- Created By -->
                                    <td>
                                        <span class="badge bg-info creator-badge">@department.CreatedBy</span>
                                    </td>

                                    <!-- Actions -->
                                    <td>
                                        <div class="action-buttons">
                                            <a asp-action="Details" asp-route-id="@department.ID"
                                               class="btn btn-sm btn-outline-primary" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@department.ID"
                                               class="btn btn-sm btn-outline-warning" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@department.ID"
                                               class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-building display-1 text-muted"></i>
                    <h3 class="mt-3">No Departments Found</h3>
                    <p class="text-muted">Start by adding your first department to the system.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Add First Department
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Table Info -->
@if (Model != null && Model.Any())
{
    <div class="table-info mt-3">
        <div class="row">
            <div class="col-md-6">
                <small class="text-muted">
                    Showing <span id="shownCount">@Model.Count</span> of @Model.Count departments
                </small>
            </div>
            <div class="col-md-6 text-end">
                <small class="text-muted">
                    Last updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm")
                </small>
            </div>
        </div>
    </div>
}

<!-- Custom Styles -->
<style>
    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    .page-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    /* Statistics Cards */
    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: transform 0.2s ease;
        margin-bottom: 1rem;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

    .stat-icon {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }

    .stat-info h3 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0;
        color: #2d3748;
    }

    .stat-info p {
        margin-bottom: 0;
        color: #718096;
        font-size: 0.9rem;
    }

    /* Search and Filter */
    .table-controls {
        background: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .search-box {
        position: relative;
    }

    .search-icon {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #718096;
    }

    /* Table Styling */
    .table-container {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 4px 25px rgba(0, 0, 0, 0.1);
    }

    .modern-table {
        font-size: 0.95rem;
    }

    .table-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

        .table-header th {
            border: none;
            padding: 1.25rem 1rem;
            font-weight: 600;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

    .modern-table tbody tr {
        border: none;
        transition: all 0.2s ease;
    }

        .modern-table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
        }

    .modern-table td {
        padding: 1.25rem 1rem;
        border-bottom: 1px solid #e2e8f0;
        vertical-align: middle;
    }

    /* Department Info */
    .department-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .icon-placeholder {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.5rem;
    }

    .department-details strong {
        color: #2d3748;
        font-size: 1rem;
    }

    /* Employee Count */
    .employee-count-info {
        text-align: center;
    }

    .employee-count-badge {
        font-size: 1rem;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
    }

    /* Description */
    .description-text {
        font-size: 0.9rem;
        color: #4a5568;
        line-height: 1.4;
    }

    /* Badges */
    .creator-badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

        .action-buttons .btn {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

            .action-buttons .btn:hover {
                transform: translateY(-2px);
            }

    /* Animation */
    .table-container {
        animation: fadeInUp 0.5s ease-out;
    }

    
</style>

<!-- JavaScript for Search and Filter -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const budgetFilter = document.getElementById('budgetFilter');
        const employeeCountFilter = document.getElementById('employeeCountFilter');
        const table = document.getElementById('departmentTable');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));

        function filterTable() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedBudgetRange = budgetFilter.value;
            const selectedEmployeeRange = employeeCountFilter.value;
            let visibleCount = 0;

            rows.forEach(row => {
                const departmentName = row.cells[0].textContent.toLowerCase();
                const departmentCode = row.cells[1].textContent.toLowerCase();
                const employeeCount = parseInt(row.cells[2].textContent.match(/\d+/)[0]);
                const budgetText = row.cells[3].textContent;
                const budget = parseInt(budgetText.replace(/[$,]/g, '').match(/\d+/)[0]);

                const matchesSearch = departmentName.includes(searchTerm) ||
                                    departmentCode.includes(searchTerm);

                let matchesBudget = true;
                if (selectedBudgetRange) {
                    if (selectedBudgetRange === '0-50000') {
                        matchesBudget = budget >= 0 && budget <= 50000;
                    } else if (selectedBudgetRange === '50000-100000') {
                        matchesBudget = budget > 50000 && budget <= 100000;
                    } else if (selectedBudgetRange === '100000-500000') {
                        matchesBudget = budget > 100000 && budget <= 500000;
                    } else if (selectedBudgetRange === '500000+') {
                        matchesBudget = budget > 500000;
                    }
                }

                let matchesEmployeeCount = true;
                if (selectedEmployeeRange) {
                    if (selectedEmployeeRange === '0') {
                        matchesEmployeeCount = employeeCount === 0;
                    } else if (selectedEmployeeRange === '1-10') {
                        matchesEmployeeCount = employeeCount >= 1 && employeeCount <= 10;
                    } else if (selectedEmployeeRange === '11-50') {
                        matchesEmployeeCount = employeeCount >= 11 && employeeCount <= 50;
                    } else if (selectedEmployeeRange === '51+') {
                        matchesEmployeeCount = employeeCount > 50;
                    }
                }

                if (matchesSearch && matchesBudget && matchesEmployeeCount) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });

            // Update shown count
            const shownCountElement = document.getElementById('shownCount');
            if (shownCountElement) {
                shownCountElement.textContent = visibleCount;
            }
        }

        // Event listeners
        searchInput.addEventListener('input', filterTable);
        budgetFilter.addEventListener('change', filterTable);
        employeeCountFilter.addEventListener('change', filterTable);

        // Add smooth scroll for long tables
        if (rows.length > 10) {
            table.style.maxHeight = '600px';
            table.style.overflowY = 'auto';
        }
    });
</script>
